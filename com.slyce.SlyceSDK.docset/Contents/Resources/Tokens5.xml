<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/SFSlyce.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/SFSlyce</TokenIdentifier>
			<Abstract type="html">Main object used to initialize the Slyce SDK.</Abstract>
			<DeclaredIn>SFSlyce.h</DeclaredIn>
            
			
			<NodeRef refid="5"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/SFSlyce/sharedInstance</TokenIdentifier>
			<Abstract type="html">Initializes and returns a singleton instance of the SDK.</Abstract>
			<DeclaredIn>SFSlyce.h</DeclaredIn>
			
			<Declaration>+ (id)sharedInstance</Declaration>
			
			<ReturnValue><Abstract type="html">a shared SFSlyce instance.</Abstract></ReturnValue>
			<Anchor>//api/name/sharedInstance</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFSlyce/openWithAppKey:appSecret:error:</TokenIdentifier>
			<Abstract type="html">Initializes a new SFSlyce object using valid App Key and App Secret credentials.</Abstract>
			<DeclaredIn>SFSlyce.h</DeclaredIn>
			
			<Declaration>- (BOOL)openWithAppKey:(NSString *)appKey appSecret:(NSString *)appSecret error:(NSError **)error</Declaration>
			<Parameters>
				<Parameter>
					<Name>appKey</Name>
					<Abstract type="html">the App Key.</Abstract>
				</Parameter><Parameter>
					<Name>appSecret</Name>
					<Abstract type="html">the App Secret.</Abstract>
				</Parameter><Parameter>
					<Name>error</Name>
					<Abstract type="html">the pointer to the error object, if any.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">YES if it succeeded, NO otherwise.

Important: Successfully opening the SFSlyce object is mandatory before you start
performing any tasks in the SDK!</Abstract></ReturnValue>
			<Anchor>//api/name/openWithAppKey:appSecret:error:</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFSlyce/getAppKey</TokenIdentifier>
			<Abstract type="html">Slyce public AppKey</Abstract>
			<DeclaredIn>SFSlyce.h</DeclaredIn>
			
			<Declaration>- (NSString *)getAppKey</Declaration>
			
			<ReturnValue><Abstract type="html">Slyce public AppKey</Abstract></ReturnValue>
			<Anchor>//api/name/getAppKey</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFSlyce/getAppSecret</TokenIdentifier>
			<Abstract type="html">Slyce public AppSecret</Abstract>
			<DeclaredIn>SFSlyce.h</DeclaredIn>
			
			<Declaration>- (NSString *)getAppSecret</Declaration>
			
			<ReturnValue><Abstract type="html">Slyce public AppSecret</Abstract></ReturnValue>
			<Anchor>//api/name/getAppSecret</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFSlyce/openWithClientID:error:</TokenIdentifier>
			<Abstract type="html">Initializes a new SFSlyce object using a customer ID.</Abstract>
			<DeclaredIn>SFSlyce.h</DeclaredIn>
			
			<Declaration>- (BOOL)openWithClientID:(NSString *)clientID error:(NSError **)error</Declaration>
			<Parameters>
				<Parameter>
					<Name>clientID</Name>
					<Abstract type="html">the customer ID.</Abstract>
				</Parameter><Parameter>
					<Name>error</Name>
					<Abstract type="html">the pointer to the error object, if any.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">YES if it succeeded, NO otherwise.</Abstract></ReturnValue>
			<Anchor>//api/name/openWithClientID:error:</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFSlyce/reportStatisticsEventWithName:additionalParameters:</TokenIdentifier>
			<Abstract type="html">Adds custom statistics event to the Slyce tracking system.

</Abstract>
			<DeclaredIn>SFSlyce.h</DeclaredIn>
			
			<Declaration>- (void)reportStatisticsEventWithName:(NSString *)eventName additionalParameters:(NSDictionary *)params</Declaration>
			<Parameters>
				<Parameter>
					<Name>eventName</Name>
					<Abstract type="html">Custom event name</Abstract>
				</Parameter><Parameter>
					<Name>params</Name>
					<Abstract type="html">Custom event paramteters. Only string keys and values supported.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/reportStatisticsEventWithName:additionalParameters:</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFSlyce/init</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>SFSlyce.h</DeclaredIn>
			
			<Declaration>- (instancetype)init</Declaration>
			
			
			<Anchor>//api/name/init</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/SFSlyce/new</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>SFSlyce.h</DeclaredIn>
			
			<Declaration>+ (instancetype)new</Declaration>
			
			
			<Anchor>//api/name/new</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFSlyce/setClientID:</TokenIdentifier>
			<Abstract type="html">The client ID used to initialize the SFSlyce object for &apos;Premium&apos; mode.</Abstract>
			<DeclaredIn>SFSlyce.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly, copy) NSString *clientID</Declaration>
			
			
			<Anchor>//api/name/clientID</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFSlyce/clientID</TokenIdentifier>
			<Abstract type="html">The client ID used to initialize the SFSlyce object for &apos;Premium&apos; mode.</Abstract>
			<DeclaredIn>SFSlyce.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly, copy) NSString *clientID</Declaration>
			
			
			<Anchor>//api/name/clientID</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/SFSlyce/clientID</TokenIdentifier>
			<Abstract type="html">The client ID used to initialize the SFSlyce object for &apos;Premium&apos; mode.</Abstract>
			<DeclaredIn>SFSlyce.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly, copy) NSString *clientID</Declaration>
			
			
			<Anchor>//api/name/clientID</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFSlyce/setIsPremiumUser:</TokenIdentifier>
			<Abstract type="html">Indicates whether the user can use premium features of the SDK.</Abstract>
			<DeclaredIn>SFSlyce.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) BOOL isPremiumUser</Declaration>
			
			
			<Anchor>//api/name/isPremiumUser</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFSlyce/isPremiumUser</TokenIdentifier>
			<Abstract type="html">Indicates whether the user can use premium features of the SDK.</Abstract>
			<DeclaredIn>SFSlyce.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) BOOL isPremiumUser</Declaration>
			
			
			<Anchor>//api/name/isPremiumUser</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/SFSlyce/isPremiumUser</TokenIdentifier>
			<Abstract type="html">Indicates whether the user can use premium features of the SDK.</Abstract>
			<DeclaredIn>SFSlyce.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) BOOL isPremiumUser</Declaration>
			
			
			<Anchor>//api/name/isPremiumUser</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFSlyce/setIs2DSearchEnabled:</TokenIdentifier>
			<Abstract type="html">Indicates whether the user can ask the SDK to perform 2D searches.</Abstract>
			<DeclaredIn>SFSlyce.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) BOOL is2DSearchEnabled</Declaration>
			
			
			<Anchor>//api/name/is2DSearchEnabled</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFSlyce/is2DSearchEnabled</TokenIdentifier>
			<Abstract type="html">Indicates whether the user can ask the SDK to perform 2D searches.</Abstract>
			<DeclaredIn>SFSlyce.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) BOOL is2DSearchEnabled</Declaration>
			
			
			<Anchor>//api/name/is2DSearchEnabled</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/SFSlyce/is2DSearchEnabled</TokenIdentifier>
			<Abstract type="html">Indicates whether the user can ask the SDK to perform 2D searches.</Abstract>
			<DeclaredIn>SFSlyce.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) BOOL is2DSearchEnabled</Declaration>
			
			
			<Anchor>//api/name/is2DSearchEnabled</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFSlyce/setIsCroppingEnabled:</TokenIdentifier>
			<Abstract type="html">Indicates whether the user can crop the image after snapping.</Abstract>
			<DeclaredIn>SFSlyce.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) BOOL isCroppingEnabled</Declaration>
			
			
			<Anchor>//api/name/isCroppingEnabled</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFSlyce/isCroppingEnabled</TokenIdentifier>
			<Abstract type="html">Indicates whether the user can crop the image after snapping.</Abstract>
			<DeclaredIn>SFSlyce.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) BOOL isCroppingEnabled</Declaration>
			
			
			<Anchor>//api/name/isCroppingEnabled</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/SFSlyce/isCroppingEnabled</TokenIdentifier>
			<Abstract type="html">Indicates whether the user can crop the image after snapping.</Abstract>
			<DeclaredIn>SFSlyce.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) BOOL isCroppingEnabled</Declaration>
			
			
			<Anchor>//api/name/isCroppingEnabled</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFSlyce/setVibrate:</TokenIdentifier>
			<Abstract type="html">If set, the device will vibrate when the a barcode/2D item auto-matched.</Abstract>
			<DeclaredIn>SFSlyce.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) BOOL vibrate</Declaration>
			
			
			<Anchor>//api/name/vibrate</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFSlyce/vibrate</TokenIdentifier>
			<Abstract type="html">If set, the device will vibrate when the a barcode/2D item auto-matched.</Abstract>
			<DeclaredIn>SFSlyce.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) BOOL vibrate</Declaration>
			
			
			<Anchor>//api/name/vibrate</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/SFSlyce/vibrate</TokenIdentifier>
			<Abstract type="html">If set, the device will vibrate when the a barcode/2D item auto-matched.</Abstract>
			<DeclaredIn>SFSlyce.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) BOOL vibrate</Declaration>
			
			
			<Anchor>//api/name/vibrate</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFSlyce/setSound:</TokenIdentifier>
			<Abstract type="html">If set, the device will play a sound when the a barcode/2D item auto-matched.</Abstract>
			<DeclaredIn>SFSlyce.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) BOOL sound</Declaration>
			
			
			<Anchor>//api/name/sound</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFSlyce/sound</TokenIdentifier>
			<Abstract type="html">If set, the device will play a sound when the a barcode/2D item auto-matched.</Abstract>
			<DeclaredIn>SFSlyce.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) BOOL sound</Declaration>
			
			
			<Anchor>//api/name/sound</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/SFSlyce/sound</TokenIdentifier>
			<Abstract type="html">If set, the device will play a sound when the a barcode/2D item auto-matched.</Abstract>
			<DeclaredIn>SFSlyce.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) BOOL sound</Declaration>
			
			
			<Anchor>//api/name/sound</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFSlyce/setCustomProgressColor:</TokenIdentifier>
			<Abstract type="html">You can set your own custom circular progress color</Abstract>
			<DeclaredIn>SFSlyce.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) UIColor *customProgressColor</Declaration>
			
			
			<Anchor>//api/name/customProgressColor</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFSlyce/customProgressColor</TokenIdentifier>
			<Abstract type="html">You can set your own custom circular progress color</Abstract>
			<DeclaredIn>SFSlyce.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) UIColor *customProgressColor</Declaration>
			
			
			<Anchor>//api/name/customProgressColor</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/SFSlyce/customProgressColor</TokenIdentifier>
			<Abstract type="html">You can set your own custom circular progress color</Abstract>
			<DeclaredIn>SFSlyce.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) UIColor *customProgressColor</Declaration>
			
			
			<Anchor>//api/name/customProgressColor</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFSlyce/setMaxWidthDimension:</TokenIdentifier>
			<Abstract type="html">Current max image width setting</Abstract>
			<DeclaredIn>SFSlyce.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) int maxWidthDimension</Declaration>
			
			
			<Anchor>//api/name/maxWidthDimension</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFSlyce/maxWidthDimension</TokenIdentifier>
			<Abstract type="html">Current max image width setting</Abstract>
			<DeclaredIn>SFSlyce.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) int maxWidthDimension</Declaration>
			
			
			<Anchor>//api/name/maxWidthDimension</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/SFSlyce/maxWidthDimension</TokenIdentifier>
			<Abstract type="html">Current max image width setting</Abstract>
			<DeclaredIn>SFSlyce.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) int maxWidthDimension</Declaration>
			
			
			<Anchor>//api/name/maxWidthDimension</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFSlyce/setMaxHeightDimension:</TokenIdentifier>
			<Abstract type="html">Current max image height setting</Abstract>
			<DeclaredIn>SFSlyce.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) int maxHeightDimension</Declaration>
			
			
			<Anchor>//api/name/maxHeightDimension</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFSlyce/maxHeightDimension</TokenIdentifier>
			<Abstract type="html">Current max image height setting</Abstract>
			<DeclaredIn>SFSlyce.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) int maxHeightDimension</Declaration>
			
			
			<Anchor>//api/name/maxHeightDimension</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/SFSlyce/maxHeightDimension</TokenIdentifier>
			<Abstract type="html">Current max image height setting</Abstract>
			<DeclaredIn>SFSlyce.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) int maxHeightDimension</Declaration>
			
			
			<Anchor>//api/name/maxHeightDimension</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
        
        
	</File>
</Tokens>